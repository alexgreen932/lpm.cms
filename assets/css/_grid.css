@charset "UTF-8";
/* ========== Base Containers ========== */
.w-container,
.w-container-c,
.w-container-w {
  position: relative;
  display: flex;
  box-sizing: border-box;
  z-index: 3;
}

/* Flex modifiers for containers */
.w-container-w {
  flex-wrap: wrap;
}

.w-container-c,
.w-container-small-c {
  flex-direction: column;
}

/* Fluid width */
.w-full,
.w-fluid {
  display: flex;
  width: 100vw;
}

.w-fluid {
  padding-left: 1rem;
  padding-right: 1rem;
}

/* Fixed width containers */
.w-container,
.w-container-c,
.w-container-nf {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 35px;
}

.w-center {
  margin: 0 auto;
}

.w-container-small,
.w-container-small-c,
.w-container-small-nf {
  width: 900px;
  min-width: 900px;
  margin: 0 auto;
}

.w-container-small {
  display: flex;
}

/* Container gap helpers */
.jgp-large {
  gap: 40px;
}

.jgp-collapse {
  gap: 0;
}

/* ========== Width Utilities (single element) ========== */
.w-1-1 {
  width: 100%;
}

.w-1-2, .w-2-4 {
  width: 50%;
}

.w-1-3 {
  width: 33.3333%;
}

.w-2-3 {
  width: 66.6667%;
}

.w-1-4 {
  width: 25%;
}

.w-3-4 {
  width: 75%;
}

.w-1-5 {
  width: 20%;
}

.w-2-5 {
  width: 40%;
}

.w-3-5 {
  width: 60%;
}

.w-4-5 {
  width: 80%;
}

.w-1-6 {
  width: 16.6667%;
}

.w-2-6 {
  width: 33.3333%;
}

.w-3-6 {
  width: 50%;
}

.w-4-6 {
  width: 66.6667%;
}

.w-5-6 {
  width: 83.3333%;
}

/* ========== Children Width Component (wc-1-*) ========== */
/* Any wc-* container is a wrapping flex row; default --gap = 0 */
[class^="wc-"], [class*=" wc-"] {
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
  --gap: 0;
}

/* Exclude a child from wc-* sizing */
.wc-x {
  flex: 0 0 auto;
  width: auto;
}

/* --- Gap‑aware column math (N columns = wc-1-N) --- */
/* 2 cols */
.wc-1-2 > :not(.wc-x) {
  flex: 0 0 calc((100% - 1 * var(--gap)) / 2);
  max-width: calc((100% - 1 * var(--gap)) / 2);
}

/* 3 cols */
.wc-1-3 > :not(.wc-x) {
  flex: 0 0 calc((100% - 2 * var(--gap)) / 3);
  max-width: calc((100% - 2 * var(--gap)) / 3);
}

/* 4 cols */
.wc-1-4 > :not(.wc-x) {
  flex: 0 0 calc((100% - 3 * var(--gap)) / 4);
  max-width: calc((100% - 3 * var(--gap)) / 4);
}

/* 5 cols */
.wc-1-5 > :not(.wc-x) {
  flex: 0 0 calc((100% - 4 * var(--gap)) / 5);
  max-width: calc((100% - 4 * var(--gap)) / 5);
}

/* 6 cols */
.wc-1-6 > :not(.wc-x) {
  flex: 0 0 calc((100% - 5 * var(--gap)) / 6);
  max-width: calc((100% - 5 * var(--gap)) / 6);
}

/* --- Backward‑compat “-g1” shortcuts (assume gap = 1rem) --- */
.wc-1-2-g1 > :not(.wc-x) {
  flex: 0 0 calc((100% - 1rem) / 2);
  max-width: calc((100% - 1rem) / 2);
}

.wc-1-3-g1 > :not(.wc-x) {
  flex: 0 0 calc((100% - 2rem) / 3);
  max-width: calc((100% - 2rem) / 3);
}

.wc-1-4-g1 > :not(.wc-x) {
  flex: 0 0 calc((100% - 3rem) / 4);
  max-width: calc((100% - 3rem) / 4);
}

.wc-1-5-g1 > :not(.wc-x) {
  flex: 0 0 calc((100% - 4rem) / 5);
  max-width: calc((100% - 4rem) / 5);
}

.wc-1-6-g1 > :not(.wc-x) {
  flex: 0 0 calc((100% - 5rem) / 6);
  max-width: calc((100% - 5rem) / 6);
}

/* ========== Responsive Modifiers (escape @ in class names) ========== */
@media (min-width: 768px) {
  .wc-1-2\@m > :not(.wc-x) {
    flex-basis: calc((100% - 1 * var(--gap)) / 2);
    max-width: calc((100% - 1 * var(--gap)) / 2);
  }
  .wc-1-3\@m > :not(.wc-x) {
    flex-basis: calc((100% - 2 * var(--gap)) / 3);
    max-width: calc((100% - 2 * var(--gap)) / 3);
  }
  .wc-1-4\@m > :not(.wc-x) {
    flex-basis: calc((100% - 3 * var(--gap)) / 4);
    max-width: calc((100% - 3 * var(--gap)) / 4);
  }
  .wc-1-5\@m > :not(.wc-x) {
    flex-basis: calc((100% - 4 * var(--gap)) / 5);
    max-width: calc((100% - 4 * var(--gap)) / 5);
  }
  .wc-1-6\@m > :not(.wc-x) {
    flex-basis: calc((100% - 5 * var(--gap)) / 6);
    max-width: calc((100% - 5 * var(--gap)) / 6);
  }
}

@media (min-width: 960px) {
  .wc-1-2\@l > :not(.wc-x) {
    flex-basis: calc((100% - 1 * var(--gap)) / 2);
    max-width: calc((100% - 1 * var(--gap)) / 2);
  }
  .wc-1-3\@l > :not(.wc-x) {
    flex-basis: calc((100% - 2 * var(--gap)) / 3);
    max-width: calc((100% - 2 * var(--gap)) / 3);
  }
  .wc-1-4\@l > :not(.wc-x) {
    flex-basis: calc((100% - 3 * var(--gap)) / 4);
    max-width: calc((100% - 3 * var(--gap)) / 4);
  }
  .wc-1-5\@l > :not(.wc-x) {
    flex-basis: calc((100% - 4 * var(--gap)) / 5);
    max-width: calc((100% - 4 * var(--gap)) / 5);
  }
  .wc-1-6\@l > :not(.wc-x) {
    flex-basis: calc((100% - 5 * var(--gap)) / 6);
    max-width: calc((100% - 5 * var(--gap)) / 6);
  }
}
